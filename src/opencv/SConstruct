#! /usr/bin/env python
# scons clang=1 -jN [debug=1]

import os

cc = 'gcc'
cxx = 'g++'

# cmd args > env values
cc = os.environ.get('CC', cc)
cxx = os.environ.get('CXX', cxx)
if ARGUMENTS.get('clang', 0):
    cc = 'clang'
    cxx = 'clang++'

ccflags = ['-std=c++11']
ccflags.extend(['-Wall', '-Wextra', '-Werror'])
ccflags.append('-Wno-unused-function')
ccflags.append('-Wno-unused-parameter')

libs = []

if ARGUMENTS.get('ocl', 0):
    libs.append('amdocl64')
    libs.append('ncurses') # this is a dependency apparently

if ARGUMENTS.get('debug', 0):
    ccflags.extend(['-ggdb', '-O0'])
else:
    ccflags.append('-O3')

#if ARGUMENTS.get('omp', 0):
#    ccflags.append('-fopenmp')
#    libs.append('gomp')

if cc == 'clang' or cxx == 'clang++':
    ccflags.append('-fcolor-diagnostics')

cpath = ['/usr/local/include', '../include']
cpath.append('/usr/include/jsoncpp')

libpath = []

# libs acquired from 'pkg-config --libs opencv'
libs.extend(['-lopencv_calib3d',
    '-lopencv_contrib',
    '-lopencv_core',
    '-lopencv_features2d',
    '-lopencv_flann',
    '-lopencv_gpu',
    '-lopencv_highgui',
    '-lopencv_imgproc',
    '-lopencv_legacy',
    '-lopencv_ml',
    '-lopencv_objdetect',
    #'-lopencv_ocl',
    '-lopencv_photo',
    '-lopencv_stitching',
    '-lopencv_superres',
    '-lopencv_ts',
    '-lopencv_video',
    '-lopencv_videostab'])
libs.extend(['jsoncpp', 'memcached', 'uuid'])

env = Environment(CC = cc, CXX = cxx)
env.Append(CCFLAGS = ccflags)
env.Append(CPPPATH = cpath)
env.Append(LIBPATH = libpath)
env.Append(LIBS = libs)

sources = ['StormStitcher.cpp', 'StormWrapper.cpp']
env.Program('stormstitcher', sources)
env.Program('load_graph', ['load_graph.cpp'])

# OLD STUFF
#sources = ['io.cpp', 'stitcher.cpp', 'matchers.cpp', 'motion_estimators.cpp']
#sources.extend(['memcached.cpp'])

#env.Program('stitcher', ['main.cpp', sources])

#env.Program('dicer', ['dicer-app.cpp', sources])
#env.Program('sizes', ['show-sizes.cpp', sources])

